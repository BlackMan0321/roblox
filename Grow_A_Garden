local UserInputService = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GardenUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui
local panel = Instance.new("Frame")
panel.Name = "GardenPanel"
panel.Size = UDim2.new(0, 240, 0, 380)
panel.Position = UDim2.new(0.5, -120, 0.5, -190)
panel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
panel.BorderSizePixel = 0
panel.AnchorPoint = Vector2.new(0.5, 0.5)
panel.ClipsDescendants = true
panel.Visible = false
panel.Parent = screenGui
local uiStroke = Instance.new("UIStroke", panel)
uiStroke.Thickness = 2
uiStroke.Color = Color3.fromRGB(80, 80, 80)
uiStroke.Transparency = 0.5
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
local uiCorner = Instance.new("UICorner", panel)
uiCorner.CornerRadius = UDim.new(0, 10)
local title = Instance.new("TextLabel", panel)
title.Size = UDim2.new(1, 0, 0, 60)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Grow A Garden"
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(230, 230, 230)
title.TextXAlignment = Enum.TextXAlignment.Left
local titlePadding = Instance.new("UIPadding", title)
titlePadding.PaddingLeft = UDim.new(0, 15)
local function createButton(parent, yPos, name, initialColor)
    local frame = Instance.new("Frame", parent)
    frame.Size = UDim2.new(1, 0, 0, 50)
    frame.Position = UDim2.new(0, 0, 0, yPos)
    frame.BackgroundTransparency = 1
    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(0.7, -10, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextScaled = true
    label.Font = Enum.Font.GothamSemibold
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.TextXAlignment = Enum.TextXAlignment.Left
    local button = Instance.new("TextButton", frame)
    button.Size = UDim2.new(0, 45, 0, 45)
    button.Position = UDim2.new(1, -55, 0.5, -22)
    button.BackgroundColor3 = initialColor or Color3.fromRGB(200, 0, 0)
    button.Text = ""
    button.AutoButtonColor = false
    button.BorderSizePixel = 0
    button.Name = name .. "Button"
    local buttonCorner = Instance.new("UICorner", button)
    buttonCorner.CornerRadius = UDim.new(0, 8)
    return frame, button
end
local spacing = 60
local startY = 60
local collectRow, collectButton = createButton(panel, startY, "Collect", Color3.fromRGB(200, 0, 0))
local clearRow, clearButton = createButton(panel, startY + spacing, "Clear", Color3.fromRGB(200, 0, 0))
local sellRow, sellButton = createButton(panel, startY + spacing * 2, "Sell", Color3.fromRGB(200, 0, 0))
local seedsRow, seedsButton = createButton(panel, startY + spacing * 3, "Seeds", Color3.fromRGB(200, 0, 0))
local gearRow, gearButton = createButton(panel, startY + spacing * 4, "Gear", Color3.fromRGB(200, 0, 0))
local seedsToggled = false
seedsButton.MouseEnter:Connect(function()
    if not seedsToggled then
        seedsButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    end
end)
seedsButton.MouseLeave:Connect(function()
    if not seedsToggled then
        seedsButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end)
seedsButton.MouseButton1Click:Connect(function()
    seedsToggled = not seedsToggled
    local seedShop = playerGui:FindFirstChild("Seed_Shop")
    if seedShop then
        seedShop.Enabled = seedsToggled
    end
    if seedsToggled then
        seedsButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    else
        seedsButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end)
local gearToggled = false
gearButton.MouseEnter:Connect(function()
    if not gearToggled then
        gearButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    end
end)
gearButton.MouseLeave:Connect(function()
    if not gearToggled then
        gearButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end)
gearButton.MouseButton1Click:Connect(function()
    gearToggled = not gearToggled
    local gearShop = playerGui:FindFirstChild("Gear_Shop")
    if gearShop then
        gearShop.Enabled = gearToggled
    end
    if gearToggled then
        gearButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    else
        gearButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end)
local clearToggled = false
local function toggleTransparencyAndCollide(transparent)
    local farmFolder = workspace:FindFirstChild("Farm")
    if not farmFolder then return end
    for _, subFarm in pairs(farmFolder:GetChildren()) do
        if subFarm:IsA("Folder") then
            local importantFolder = subFarm:FindFirstChild("Important")
            if importantFolder then
                local plantsPhysicalFolder = importantFolder:FindFirstChild("Plants_Physical")
                if plantsPhysicalFolder then
                    for _, model in pairs(plantsPhysicalFolder:GetChildren()) do
                        if model:IsA("Model") then
                            for _, part in pairs(model:GetChildren()) do
                                if part:IsA("BasePart") then
                                    part.Transparency = transparent and 1 or 0
                                    part.CanCollide = not transparent
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
clearButton.MouseButton1Click:Connect(function()
    clearToggled = not clearToggled
    if clearToggled then
        clearButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        toggleTransparencyAndCollide(true)
    else
        clearButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        toggleTransparencyAndCollide(false)
    end
end)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
        panel.Visible = not panel.Visible
    end
end)
local dragging = false
local dragInput = nil
local dragStart = nil
local startPos = nil
local function update(input)
    local delta = input.Position - dragStart
    panel.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end
panel.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = panel.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
panel.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
